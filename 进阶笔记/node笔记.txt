1.supervisor  自动重启程序

安装：supervisor

启动： supervisor --harmony index

2.路由：分别在不同的js文件下写上路由控制器：

var express = require('express');
var router = express.Router();

    router.get('/', function(req, res) {
       res.send('hello, express');
     });

module.exports = router;


再在根js文件下引用并注册：

var express = require('express');
var app = express();
var indexRouter = require('./routes/index');
var userRouter = require('./routes/users');

app.use('/', indexRouter);
app.use('/users', userRouter);

app.listen(3000);

3.模板引擎：ejs

安装：npm i ejs --save

在根js文件下设置存放模板文件的目录  设置模板引擎

4.会话 session

由于 HTTP 协议是无状态的协议，所以服务端需要记录用户的状态时，就需要用某种机制来识别具体的用户，这个机制就是会话（Session

通过引入 express-session 中间件实现对会话的支持：app.use(session(options))

登录后设置 req.session.user = 用户信息

5.目录简介：

   models:存放操作数据库的文件

   public:存放静态文件，如样式、图片等

   routes:存放路由文件

   views:存放模板文件

   index.js:程序主文件

   package.json: 存储项目名、描述、作者、依赖等等信息

6.模块的应用：

express: web 框架
express-session: session 中间件
connect-mongo: 将 session 存储于 mongodb，结合 express-session 使用
connect-flash: 页面通知提示的中间件，基于 session 实现
ejs: 模板
express-formidable: 接收表单及文件的上传中间件
config-lite: 读取配置文件
marked: markdown 解析
moment: 时间格式化
mongolass: mongodb 驱动
objectid-to-timestamp: 根据 ObjectId 生成时间戳
sha1: sha1 加密，用于密码加密
winston: 日志
express-winston: 基于 winston 的用于 express 的日志中间件